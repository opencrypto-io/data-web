{"version":3,"sources":["index.js"],"names":["baseUrl","makeUrl","url","join","window","location","hostname","client","ocd","Client","dataUrl","defs","model","path","counts","contributors","formattedSource","sampleSource","sampleSourceProject","format","metadata","sampleId","query","exampleIds","Counter","keys","forEach","d","cd","Object","map","col","m","style","Contributors","request","then","res","slice","length","href","c","html_url","src","avatar_url","login","setFormat","type","setQuery","q","redrawSource","setModel","prev","setId","split","undefined","get","e","error","toString","redraw","formatSource","dump","JSON","stringify","jsyaml","hljs","highlight","value","DataSample","oninput","withAttr","k","id","placeholder","trust","onclick","name","class","target","LastCommit","commitShort","commit","replace","title","moment","time","fromNow","mount","document","getElementById"],"mappings":"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","file":"data-web.9255edb2.map","sourceRoot":"..","sourcesContent":["\nvar baseUrl = ''\nif (window.location.hostname === 'localhost') {\n  baseUrl = 'https://data.opencrypto.io/'\n}\n\nfunction makeUrl(url) {\n  return [ baseUrl, url ].join('/')\n}\n\nconst client = new ocd.Client({ dataUrl: makeUrl('data.json') })\nconst defs = {\n  Projects: { model: 'project', path: \"projects[]\" },\n  Assets: { model: 'asset', path: \"projects[].assets[]\" },\n  Networks: { model: 'network', path: \"projects[].assets[].networks[]\" },\n  Exchanges: { model: 'exchange', path: \"projects[].exchanges[]\" },\n  Clients: { model: 'client', path: \"projects[].clients[]\" },\n  Apps: { model: 'app', path: \"projects[].apps[]\" }\n}\nvar counts = {}\nvar contributors = []\nvar formattedSource = null\nvar sampleSource = null\nvar sampleSourceProject = \"ethereum\"\n\nvar format = \"yaml\"\nvar metadata = null\nvar sampleId = \"ethereum\"\nvar query = \"\"\nvar model = \"project\"\nvar exampleIds = {\n  project: \"ethereum\",\n  asset: \"ethereum:eth\",\n  network: \"ethereum:eth:main\",\n  exchange: \"makerdao:oasis\",\n  market: \"makerdao:oasis:market\"\n}\n\nvar Counter = {\n  oninit: async function() {\n    Object.keys(defs).forEach(async function(d) {\n      let cd = defs[d]\n      if (!cd.path) {\n        counts[d] = 0\n        return null\n      }\n      counts[d] = await client.query(cd.path + \" | length(@)\")\n    })\n  },\n  view: function() {\n    return Object.keys(defs).map(function(col) {\n      return m(\".tile.is-parent\",\n        m(\"article.tile.is-child.has-text-centered\", [\n          m(\"span.col\", \"# \" + col),\n          m(\"div.count\", counts[col] || m(\"span\", { style: \"color: gray;\" }, \"?\"))\n        ])\n      )\n    })\n  }\n}\nvar Contributors = {\n  oninit: function() {\n    contributors = []\n    return m.request({\n      url: makeUrl(\"contributors.json\")\n    }).then(function(res) {\n      contributors = res.slice(0, 40)\n    })\n  },\n  view: function() {\n    if (contributors.length === 0) return m(\"div\", \"Loading GitHub data ..\");\n    return m(\"div\", [\n      m(\"p.title.is-4\", [\n        m(\"b\",m(\"a.silent-link\", { href: \"https://github.com/opencrypto-io/data/graphs/contributors\"}, \"Contributors\")),\n        \" - \" + contributors.length + \" people\"\n      ]),\n      m(\"div.content\", contributors.map(function(c) {\n        return m(\"a.contributor\", { href: c.html_url },\n          m(\"img.avatar\", { src: c.avatar_url }, c.login))\n      }))\n    ])\n  }\n}\nfunction setFormat(type) {\n  format = type\n  formatSource(sampleSource)\n}\nasync function setQuery(q) {\n  query = q\n  redrawSource()\n}\nasync function setModel(q, prev) {\n  model = q\n  if (q !== prev) {\n    return setId(exampleIds[q])\n  }\n  redrawSource()\n}\nasync function setId(q) {\n  sampleId = q\n  sampleSourceProject = q.split(\":\")[0]\n  redrawSource()\n}\nasync function redrawSource() {\n  if (query === \"\") {\n    query = undefined\n  }\n  try {\n    sampleSource = await client.get(model, sampleId, query)\n  } catch (e) {\n    console.error(\"Query error: \" + e)\n    sampleSource = e.toString()\n  }\n  formatSource(sampleSource)\n  m.redraw()\n}\nfunction formatSource(res) {\n  let dump = null\n  let type = null\n  if (format === \"json\") {\n    dump = JSON.stringify(res, null, 2)\n    type = 'json'\n  } else {\n    dump = jsyaml.dump(res)\n    type = 'yaml'\n  }\n  formattedSource = hljs.highlight(type, dump).value\n}\nvar DataSample = {\n  oninit: async function() {\n    redrawSource()\n    //m.redraw()\n  },\n  view: function() {\n    return m(\"div\", [\n      m(\".sample-header\", [\n        m(\".sample-header-container\", [\n          m(\".level\", [\n            m('.level-item', [\n              //m(\"label\", { style: \"padding-right: 0.5em;\"}, \"Model: \"),\n              m(\".select\", m(\"select\", { type: \"text\", value: model, oninput: m.withAttr(\"value\", setModel) }, Object.keys(defs).map(function(k) {\n                return m(\"option\", { id: defs[k].model }, defs[k].model)\n              })))\n            ]),\n            m('.level-item', [\n              //m(\"label\", { style: \"padding-right: 0.5em;\"}, \"Id: \"),\n              m(\"input.input\", { type: \"text\", value: sampleId, oninput: m.withAttr(\"value\", setId), placeholder: 'Item ID ..' })\n            ]),\n            m('.level-item', [\n              //m(\"label\", { style: \"padding-right: 0.5em;\"}, \"Query: \"),\n              m(\"input.input\", { type: \"text\", value: query, oninput: m.withAttr(\"value\", setQuery), placeholder: 'Query ..' })\n            ])\n          ])\n        ]),\n      ]),\n      m(\"pre\", m(\"code\", m.trust(formattedSource))),\n      m(\".sample-footer\", { style: \"padding-top: 0.5em;\" }, [\n        m(\".level\", [\n          m(\".level-left\", [\n            m(\".control.level-item\", [\n              m(\"a\", { onclick: m.withAttr(\"value\", setFormat), name: \"format\", value: \"yaml\", class: (format === \"yaml\") ? 'checked' : '' }, \"YAML\"),\n              m.trust(\"&nbsp;-&nbsp;\"),\n              m(\"a\", { onclick: m.withAttr(\"value\", setFormat), name: \"format\", value: \"json\", class: (format === \"json\") ? 'checked' : '' }, \" JSON\")\n            ])\n          ]),\n          m(\".level-right\", [\n            m(\".level-item\", m(\"a\", { href: \"https://github.com/opencrypto-io/data/blob/master/db/projects/\"+sampleSourceProject+\"/project.yaml\", style: \"color: white;\", target: '_blank' }, [\n              m(\"i.far.fa-file\"),\n              m(\"span\", \" Source file\")\n            ])),\n            m(\".level-item\", m(\"a\", { href: \"https://github.com/opencrypto-io/data/edit/master/db/projects/\"+sampleSourceProject+\"/project.yaml\", style: \"color: white;\", target: '_blank' }, [\n              m(\"i.far.fa-edit\"),\n              m(\"span\", \" Edit\")\n            ])),\n          ])\n        ])\n      ])\n    ])\n  }\n}\nvar LastCommit = {\n  oninit: async function() {\n    metadata = await client.query(\"metadata\")\n    m.redraw()\n  },\n  view: function() {\n    if (!metadata) return null\n    let commitShort = metadata.commit.replace(/^(.{7}).+(.{7})$/, \"$1\")\n    return m(\"div\", [\n      m(\"div.is-hidden-mobile\", \"Last commit: \"),\n      m(\"a\", { href: \"https://github.com/opencrypto-io/data/commits/master\", title: metadata.commit }, commitShort),\n      m(\"span\", \" (\"+moment(metadata.time).fromNow()+\")\")\n    ])\n  }\n}\nm.mount(document.getElementById('counters'), Counter)\nm.mount(document.getElementById('contributors'), Contributors)\nm.mount(document.getElementById('data-sample'), DataSample)\nm.mount(document.getElementById('last-commit'), LastCommit)\n"]}