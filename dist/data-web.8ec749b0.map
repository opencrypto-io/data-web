{"version":3,"sources":["index.js"],"names":["baseUrl","makeUrl","url","join","window","location","hostname","client","ocd","Client","dataUrl","pick","counts","contributors","formattedSource","sampleSource","sampleSourceProject","format","metadata","sampleId","query","model","exampleIds","defs","Counter","forEach","d","cd","path","q","map","k","concat","log","col","m","toUpperCase","substring","style","Contributors","request","then","res","slice","length","href","c","html_url","src","avatar_url","login","setFormat","type","setQuery","redrawSource","setModel","prev","setId","split","undefined","get","e","error","toString","redraw","formatSource","dump","JSON","stringify","jsyaml","hljs","highlight","value","DataSample","oninput","withAttr","sd","schema","id","placeholder","trust","onclick","name","class","target","LastCommit","commitShort","commit","replace","title","moment","time","fromNow","mount","document","getElementById"],"mappings":"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","file":"data-web.8ec749b0.map","sourceRoot":"..","sourcesContent":["\nvar baseUrl = ''\nif (window.location.hostname === 'localhost') {\n  baseUrl = 'https://data.opencrypto.io/'\n}\n\nfunction makeUrl (url) {\n  return [ baseUrl, url ].join('/')\n}\n\nconst client = new ocd.Client({ dataUrl: makeUrl('data.json') })\nconst pick = [ 'projects', 'ledgers', 'networks', 'assets', 'clients', 'exchanges' ]\n\nvar counts = {}\nvar contributors = []\nvar formattedSource = null\nvar sampleSource = null\nvar sampleSourceProject = 'ethereum'\n\nvar format = 'yaml'\nvar metadata = null\nvar sampleId = 'ethereum'\nvar query = ''\nvar model = 'project'\nvar exampleIds = {\n  project: 'ethereum',\n  ledger: 'bitcoin:bitcoin',\n  asset: 'makerdao:dai',\n  client: 'bitcoin:bitcoin-core',\n  network: 'ethereum:eth:main',\n  exchange: 'binance:binance',\n  market: 'makerdao:oasis:market'\n}\n\nvar defs = null\n\nvar Counter = {\n  oninit: async function () {\n    defs = await ocd.query('collections')\n    pick.forEach(async function (d) {\n      let cd = defs[d]\n      if (!cd.path) {\n        cd.path = []\n      }\n      const q = `${cd.path.map(k => k + 's[]').concat([`${d}[]`]).join('.')} | length(@)`\n      counts[d] = await client.query(q) || 0\n      console.log(q, counts)\n    })\n  },\n  view: function () {\n    if (!defs) {\n      return m('center', 'Loading ..')\n    }\n    return pick.map(function (col) {\n      return m('.tile.is-parent',\n        m('article.tile.is-child.has-text-centered', [\n          m('span.col', `# ${col[0].toUpperCase() + col.substring(1)}`),\n          m('div.count', counts[col] || m('span', { style: 'color: gray;' }, '?'))\n        ])\n      )\n    })\n  }\n}\nvar Contributors = {\n  oninit: function () {\n    contributors = []\n    return m.request({\n      url: makeUrl('contributors.json')\n    }).then(function (res) {\n      contributors = res.slice(0, 40)\n    })\n  },\n  view: function () {\n    if (contributors.length === 0) return m('div', 'Loading GitHub data ..')\n    return m('div', [\n      m('p.title.is-4', [\n        m('b', m('a.silent-link', { href: 'https://github.com/opencrypto-io/data/graphs/contributors'}, 'Contributors')),\n        ' - ' + contributors.length + ' people'\n      ]),\n      m('div.content', contributors.map(function (c) {\n        return m('a.contributor', { href: c.html_url },\n          m('img.avatar', { src: c.avatar_url }, c.login))\n      }))\n    ])\n  }\n}\nfunction setFormat (type) {\n  format = type\n  formatSource(sampleSource)\n}\nasync function setQuery (q) {\n  query = q\n  redrawSource()\n}\nasync function setModel (q, prev) {\n  model = q\n  if (q !== prev) {\n    return setId(exampleIds[q])\n  }\n  redrawSource()\n}\nasync function setId (q) {\n  sampleId = q\n  sampleSourceProject = q.split(':')[0]\n  redrawSource()\n}\nasync function redrawSource () {\n  if (query === '') {\n    query = undefined\n  }\n  try {\n    sampleSource = await client.get(model, sampleId, query)\n  } catch (e) {\n    console.error('Query error: ' + e)\n    sampleSource = e.toString()\n  }\n  formatSource(sampleSource)\n  m.redraw()\n}\nfunction formatSource (res) {\n  let dump = null\n  let type = null\n  if (format === 'json') {\n    dump = JSON.stringify(res, null, 2)\n    type = 'json'\n  } else {\n    dump = jsyaml.dump(res)\n    type = 'yaml'\n  }\n  formattedSource = hljs.highlight(type, dump).value\n}\nvar DataSample = {\n  oninit: async function () {\n    redrawSource()\n    // m.redraw()\n  },\n  view: function () {\n    if (!defs) {\n      return m('center', 'Loading ..')\n    }\n    return m('div', [\n      m('.sample-header', [\n        m('.sample-header-container', [\n          m('.level', [\n            m('.level-item', [\n              // m(\"label\", { style: \"padding-right: 0.5em;\"}, \"Model: \"),\n              m('.select', m('select', { type: 'text', value: model, oninput: m.withAttr('value', setModel) }, pick.map(function (k) {\n                const sd = defs[k].schema\n                return m('option', { id: sd }, sd)\n              })))\n            ]),\n            m('.level-item', [\n              // m(\"label\", { style: \"padding-right: 0.5em;\"}, \"Id: \"),\n              m('input.input', { type: 'text', value: sampleId, oninput: m.withAttr('value', setId), placeholder: 'Item ID ..' })\n            ]),\n            m('.level-item', [\n              // m(\"label\", { style: \"padding-right: 0.5em;\"}, \"Query: \"),\n              m('input.input', { type: 'text', value: query, oninput: m.withAttr('value', setQuery), placeholder: 'Query ..' })\n            ])\n          ])\n        ])\n      ]),\n      m('pre', m('code', m.trust(formattedSource))),\n      m('.sample-footer', { style: 'padding-top: 0.5em;' }, [\n        m('.level', [\n          m('.level-left', [\n            m('.control.level-item', [\n              m('a', { onclick: m.withAttr('value', setFormat), name: 'format', value: 'yaml', class: (format === 'yaml') ? 'checked' : '' }, 'YAML'),\n              m.trust('&nbsp;-&nbsp;'),\n              m('a', { onclick: m.withAttr('value', setFormat), name: 'format', value: 'json', class: (format === 'json') ? 'checked' : '' }, ' JSON')\n            ])\n          ]),\n          m('.level-right', [\n            m('.level-item', m('a', { href: 'https://github.com/opencrypto-io/data/blob/master/db/projects/' + sampleSourceProject + '/project.yaml', style: 'color: white;', target: '_blank' }, [\n              m('i.far.fa-file'),\n              m('span', ' Source file')\n            ])),\n            m('.level-item', m('a', { href: 'https://github.com/opencrypto-io/data/edit/master/db/projects/' + sampleSourceProject + '/project.yaml', style: 'color: white;', target: '_blank' }, [\n              m('i.far.fa-edit'),\n              m('span', ' Edit')\n            ]))\n          ])\n        ])\n      ])\n    ])\n  }\n}\nvar LastCommit = {\n  oninit: async function () {\n    metadata = await client.query('metadata')\n    m.redraw()\n  },\n  view: function () {\n    if (!metadata) return null\n    let commitShort = metadata.commit.replace(/^(.{7}).+(.{7})$/, '$1')\n    return m('div', [\n      m('div.is-hidden-mobile', 'Last commit: '),\n      m('a', { href: 'https://github.com/opencrypto-io/data/commits/master', title: metadata.commit }, commitShort),\n      m('span', ' (' + moment(metadata.time).fromNow() + ')')\n    ])\n  }\n}\nm.mount(document.getElementById('counters'), Counter)\nm.mount(document.getElementById('contributors'), Contributors)\nm.mount(document.getElementById('data-sample'), DataSample)\nm.mount(document.getElementById('last-commit'), LastCommit)\n"]}